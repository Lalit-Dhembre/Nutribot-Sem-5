import React, { useContext, useEffect, useState } from "react";
import AppContext from "../Context/AppContext";
import nutibgremvoed from "../assets/nutibgremvoed.png";
import idea from "../assets/idea.png";
import ReactMarkdown from "react-markdown";
import { useNavigate } from "react-router-dom";
const GeneratedRecipe = () => {
  const navigate = useNavigate();
  const handleCart = () => {
    navigate("/");
  };
  const { getRecipe } = useContext(AppContext);
  const [recipe, setRecipe] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      // setLoading(true);
      setError(null);

      const time = localStorage?.getItem("time");
      const ingredients = localStorage?.getItem("ingridients");
      const healthStatus = JSON.parse(localStorage.getItem("healthStatus"));
      const cookingStyle = JSON.parse(localStorage.getItem("cookingStyle"));

      const prompt = `
I want a ${cookingStyle.dishType || "dish"} recipe with ingredients as ${
        ingredients || "any available ingredients"
      } which should get completed in ${time || "any time"} only. 
I have diseases like ${healthStatus.selectedDisease1 || "none"}, ${
        healthStatus.selectedDisease2 || "none"
      }, ${healthStatus.otherConditions || "none"}. 
Give me a recipe which I can make to serve 1. I like ${
        cookingStyle.cuisine || "any cuisine"
      } and special cooking instructions are ${
        cookingStyle.cookingInstructions || "none"
      }. 
Give all list of ingredients, calories, carbs, proteins. I want to display the prompt in a chatbot so don't give formal messages! Also include the message: 'Subscribe to Nutribot for more AI-generated recipes'. 
Don't include placeholders for links. If no ingredients are specified, still generate something. Don't return anything without a recipe.
`;

      try {
        const apiData = await getRecipe(
          time,
          ingredients,
          healthStatus.selectedDisease1,
          healthStatus.selectedDisease2,
          healthStatus.otherConditions,
          cookingStyle.cuisine,
          cookingStyle.cookingInstructions,
          cookingStyle.dishType,
          prompt
        );
        console.log(apiData?.data?.data?.response);
        setRecipe(apiData?.data?.data?.response);
        console.log(apiData);

        // console.log(apiData);
      } catch (error) {
        setError("Error fetching recipe");
        console.error("Error fetching recipe:", error);
      } finally {
        setLoading(false);
        localStorage.removeItem("time");
        localStorage.removeItem("ingridients");
        localStorage.removeItem("healthStatus");
        localStorage.removeItem("cookingStyle");
      }
    };

    fetchData();
  }, [getRecipe]);

  if (loading) {
    return (
      <div className="flex justify-center align-middle h-screen items-center">
        <div className="inner flex items-center justify-center flex-col">
          <span className=" relative left-28 top-10 animate-[pulse_0.75s_infinite] font-extrabold ">
            <img
              src={idea}
              alt=""
              className="h-[120px] w-[120px] md:h-[150px] md:w-[150px] "
            />
          </span>
          <img
            src={nutibgremvoed}
            alt=""
            className="h-[300px] w-[300px] drop-shadow-2xl md:h-[400px] md:w-[400px]"
          />
          <h1 className="font-bold text-5xl">Let me think </h1>
        </div>
      </div>
    );
  }

  if (error) {
    return <div>{error}</div>;
  }

  return (
    <div>
      <div className="consine sm:max-w-screen-sm md:max-w-screen-md lg:max-w-screen-lg xl:max-w-screen-xl mx-auto flex justify-center items-center flex-col ">
        <img
          src={nutibgremvoed}
          alt="Generated Recipe"
          className="h-[300px] w-[300px] mt-[30px]"
        />
        <h3 className="text-center text-3xl font-bold">
          Here is your Generated Recipe
        </h3>
        <h3>
          <div className="mt-4 text-2xl text-center">
            The quantities mentioned in the recipe generated by Nutribot serve{" "}
            <span className="font-bold text-center">One</span>
          </div>
        </h3>
        <div className="recipecontainer bg-green-400 py-5 mt-5 rounded-2xl h-auto px-5 flex align-middle flex-col">
          <ReactMarkdown className="text-xl">{recipe}</ReactMarkdown>
          <button className="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center justify-center mt-[20px]">
            Generate more
          </button>
          <button
            className="bg-yellow-400 font-bold py-2 px-4 rounded inline-flex items-center justify-center mt-[20px] hover:bg-yellow-200"
            onClick={handleCart}
          >
            Add this to cart
          </button>
        </div>
        <div className="padded h-[500px]"></div>
      </div>
    </div>
  );
};

export default GeneratedRecipe;
